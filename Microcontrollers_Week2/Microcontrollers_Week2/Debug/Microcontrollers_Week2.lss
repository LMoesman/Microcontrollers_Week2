
Microcontrollers_Week2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000292  00000326  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000292  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800120  00800120  00000346  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000346  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000378  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a7e  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c3  00000000  00000000  00000e8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000612  00000000  00000000  0000174d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00001d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007ab4  00000000  00000000  00001ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002dd  00000000  00000000  00009954  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00009c31  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002ca6  00000000  00000000  00009c79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	68 c0       	rjmp	.+208    	; 0xda <__vector_2>
   a:	00 00       	nop
   c:	bb c0       	rjmp	.+374    	; 0x184 <__vector_3>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e9       	ldi	r30, 0x92	; 146
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 32       	cpi	r26, 0x20	; 32
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e2       	ldi	r26, 0x20	; 32
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 32       	cpi	r26, 0x24	; 36
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e3 d0       	rcall	.+454    	; 0x28a <main>
  c4:	e4 c0       	rjmp	.+456    	; 0x28e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <display>:
	
	EICRA |= 0x3C;
	EIMSK |= 0x06;
	
	sei();
	display(0);
  c8:	80 31       	cpi	r24, 0x10	; 16
  ca:	91 05       	cpc	r25, r1
  cc:	28 f4       	brcc	.+10     	; 0xd8 <display+0x10>
  ce:	fc 01       	movw	r30, r24
  d0:	e0 5f       	subi	r30, 0xF0	; 240
  d2:	fe 4f       	sbci	r31, 0xFE	; 254
  d4:	80 81       	ld	r24, Z
  d6:	85 bb       	out	0x15, r24	; 21
  d8:	08 95       	ret

000000da <__vector_2>:
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	0b b6       	in	r0, 0x3b	; 59
  e6:	0f 92       	push	r0
  e8:	2f 93       	push	r18
  ea:	3f 93       	push	r19
  ec:	4f 93       	push	r20
  ee:	5f 93       	push	r21
  f0:	6f 93       	push	r22
  f2:	7f 93       	push	r23
  f4:	8f 93       	push	r24
  f6:	9f 93       	push	r25
  f8:	af 93       	push	r26
  fa:	bf 93       	push	r27
  fc:	ef 93       	push	r30
  fe:	ff 93       	push	r31
 100:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <exercise>
 104:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <exercise+0x1>
 108:	82 30       	cpi	r24, 0x02	; 2
 10a:	91 05       	cpc	r25, r1
 10c:	51 f4       	brne	.+20     	; 0x122 <__vector_2+0x48>
 10e:	85 b3       	in	r24, 0x15	; 21
 110:	80 38       	cpi	r24, 0x80	; 128
 112:	19 f4       	brne	.+6      	; 0x11a <__vector_2+0x40>
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	85 bb       	out	0x15, r24	; 21
 118:	22 c0       	rjmp	.+68     	; 0x15e <__vector_2+0x84>
 11a:	85 b3       	in	r24, 0x15	; 21
 11c:	88 0f       	add	r24, r24
 11e:	85 bb       	out	0x15, r24	; 21
 120:	1e c0       	rjmp	.+60     	; 0x15e <__vector_2+0x84>
 122:	03 97       	sbiw	r24, 0x03	; 3
 124:	e1 f4       	brne	.+56     	; 0x15e <__vector_2+0x84>
 126:	80 b3       	in	r24, 0x10	; 16
 128:	86 30       	cpi	r24, 0x06	; 6
 12a:	41 f4       	brne	.+16     	; 0x13c <__vector_2+0x62>
 12c:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <__data_end+0x1>
 130:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__data_end>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	c7 df       	rcall	.-114    	; 0xc8 <display>
 13a:	11 c0       	rjmp	.+34     	; 0x15e <__vector_2+0x84>
 13c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 140:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 144:	8e 30       	cpi	r24, 0x0E	; 14
 146:	91 05       	cpc	r25, r1
 148:	2c f4       	brge	.+10     	; 0x154 <__vector_2+0x7a>
 14a:	01 96       	adiw	r24, 0x01	; 1
 14c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 150:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 154:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 158:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 15c:	b5 df       	rcall	.-150    	; 0xc8 <display>
 15e:	ff 91       	pop	r31
 160:	ef 91       	pop	r30
 162:	bf 91       	pop	r27
 164:	af 91       	pop	r26
 166:	9f 91       	pop	r25
 168:	8f 91       	pop	r24
 16a:	7f 91       	pop	r23
 16c:	6f 91       	pop	r22
 16e:	5f 91       	pop	r21
 170:	4f 91       	pop	r20
 172:	3f 91       	pop	r19
 174:	2f 91       	pop	r18
 176:	0f 90       	pop	r0
 178:	0b be       	out	0x3b, r0	; 59
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <__vector_3>:
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	0b b6       	in	r0, 0x3b	; 59
 190:	0f 92       	push	r0
 192:	2f 93       	push	r18
 194:	3f 93       	push	r19
 196:	4f 93       	push	r20
 198:	5f 93       	push	r21
 19a:	6f 93       	push	r22
 19c:	7f 93       	push	r23
 19e:	8f 93       	push	r24
 1a0:	9f 93       	push	r25
 1a2:	af 93       	push	r26
 1a4:	bf 93       	push	r27
 1a6:	ef 93       	push	r30
 1a8:	ff 93       	push	r31
 1aa:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <exercise>
 1ae:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <exercise+0x1>
 1b2:	82 30       	cpi	r24, 0x02	; 2
 1b4:	91 05       	cpc	r25, r1
 1b6:	51 f4       	brne	.+20     	; 0x1cc <__vector_3+0x48>
 1b8:	85 b3       	in	r24, 0x15	; 21
 1ba:	81 11       	cpse	r24, r1
 1bc:	03 c0       	rjmp	.+6      	; 0x1c4 <__vector_3+0x40>
 1be:	80 e8       	ldi	r24, 0x80	; 128
 1c0:	85 bb       	out	0x15, r24	; 21
 1c2:	22 c0       	rjmp	.+68     	; 0x208 <__vector_3+0x84>
 1c4:	85 b3       	in	r24, 0x15	; 21
 1c6:	86 95       	lsr	r24
 1c8:	85 bb       	out	0x15, r24	; 21
 1ca:	1e c0       	rjmp	.+60     	; 0x208 <__vector_3+0x84>
 1cc:	03 97       	sbiw	r24, 0x03	; 3
 1ce:	e1 f4       	brne	.+56     	; 0x208 <__vector_3+0x84>
 1d0:	80 b3       	in	r24, 0x10	; 16
 1d2:	86 30       	cpi	r24, 0x06	; 6
 1d4:	41 f4       	brne	.+16     	; 0x1e6 <__vector_3+0x62>
 1d6:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <__data_end+0x1>
 1da:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__data_end>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	72 df       	rcall	.-284    	; 0xc8 <display>
 1e4:	11 c0       	rjmp	.+34     	; 0x208 <__vector_3+0x84>
 1e6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 1ea:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 1ee:	18 16       	cp	r1, r24
 1f0:	19 06       	cpc	r1, r25
 1f2:	2c f4       	brge	.+10     	; 0x1fe <__vector_3+0x7a>
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 1fa:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 1fe:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 202:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 206:	60 df       	rcall	.-320    	; 0xc8 <display>
 208:	ff 91       	pop	r31
 20a:	ef 91       	pop	r30
 20c:	bf 91       	pop	r27
 20e:	af 91       	pop	r26
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	7f 91       	pop	r23
 216:	6f 91       	pop	r22
 218:	5f 91       	pop	r21
 21a:	4f 91       	pop	r20
 21c:	3f 91       	pop	r19
 21e:	2f 91       	pop	r18
 220:	0f 90       	pop	r0
 222:	0b be       	out	0x3b, r0	; 59
 224:	0f 90       	pop	r0
 226:	0f be       	out	0x3f, r0	; 63
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <wait>:
				util/delay.h
Version :    	DMK, Initial code
Author	:		dkroeske@gmail.com
*******************************************************************/
{
	for (int i=0; i<ms; i++)
 22e:	18 16       	cp	r1, r24
 230:	19 06       	cpc	r1, r25
 232:	6c f4       	brge	.+26     	; 0x24e <wait+0x20>
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 238:	ef ec       	ldi	r30, 0xCF	; 207
 23a:	f7 e0       	ldi	r31, 0x07	; 7
 23c:	31 97       	sbiw	r30, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <wait+0xe>
 240:	00 c0       	rjmp	.+0      	; 0x242 <wait+0x14>
 242:	00 00       	nop
 244:	2f 5f       	subi	r18, 0xFF	; 255
 246:	3f 4f       	sbci	r19, 0xFF	; 255
 248:	82 17       	cp	r24, r18
 24a:	93 07       	cpc	r25, r19
 24c:	a9 f7       	brne	.-22     	; 0x238 <wait+0xa>
 24e:	08 95       	ret

00000250 <ExecuteB4>:
void display (int digit){
	if(digit >=0 && digit <=15){
		PORTC = NUMBERS[digit];
	}
}
void ExecuteB4(){
 250:	ef 92       	push	r14
 252:	ff 92       	push	r15
 254:	1f 93       	push	r17
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	c0 e0       	ldi	r28, 0x00	; 0
 25c:	d1 e0       	ldi	r29, 0x01	; 1
 25e:	0f 2e       	mov	r0, r31
 260:	f0 e1       	ldi	r31, 0x10	; 16
 262:	ef 2e       	mov	r14, r31
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	ff 2e       	mov	r15, r31
 268:	f0 2d       	mov	r31, r0
	int i = 0;
	for(i = 0;i < 16;i++){
		DDRC = 0xFF;
 26a:	1f ef       	ldi	r17, 0xFF	; 255
 26c:	14 bb       	out	0x14, r17	; 20
		PORTC = NUMBER_ANIMATION[i];
 26e:	89 91       	ld	r24, Y+
 270:	85 bb       	out	0x15, r24	; 21
		wait(100);
 272:	84 e6       	ldi	r24, 0x64	; 100
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	db df       	rcall	.-74     	; 0x22e <wait>
		PORTC = NUMBERS[digit];
	}
}
void ExecuteB4(){
	int i = 0;
	for(i = 0;i < 16;i++){
 278:	ce 15       	cp	r28, r14
 27a:	df 05       	cpc	r29, r15
 27c:	b9 f7       	brne	.-18     	; 0x26c <ExecuteB4+0x1c>
		DDRC = 0xFF;
		PORTC = NUMBER_ANIMATION[i];
		wait(100);
	}
	
}
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	1f 91       	pop	r17
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	08 95       	ret

0000028a <main>:
	//ExecuteB2();
//	ExecuteB3();

    while (1) 
    {
		ExecuteB4();
 28a:	e2 df       	rcall	.-60     	; 0x250 <ExecuteB4>
 28c:	fe cf       	rjmp	.-4      	; 0x28a <main>

0000028e <_exit>:
 28e:	f8 94       	cli

00000290 <__stop_program>:
 290:	ff cf       	rjmp	.-2      	; 0x290 <__stop_program>
